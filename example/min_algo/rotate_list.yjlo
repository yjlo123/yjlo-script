/*
Rotate a list of n elements to the right by k steps.
For example, with n = 7 and k = 3,
the lst [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4].
*/

import ListUtil

func rotate(lst, k) {
	n := ListUtil.len(lst)
	k = k % n
	left := []; right := []; res := []
	
	for i in 0..<n-k {
		left = (lst.head, left)
		lst = lst.tail
	}
	
	for i in n-k..<n {
		right = (lst.head, right)
		lst = lst.tail
	}

	while !left.isEmpty {
		res = (left.head, res)
		left = left.tail
	}
	
	while !right.isEmpty {
		res = (right.head, res)
		right = right.tail
	}
	
	return res
}

print(rotate([1,2,3,4,5,6,7], 3))
