/*
There are people sitting in a circular fashion,
print every third member while removing them,
the next counter starts immediately after the member is removed.
Print till all the members are exhausted.
For example:
Input: consider 123456789 members sitting in a circular fashion,
Output: 369485271
*/

import Queue
import ListUtil

func circularCount(list, skip){
	queue := Queue()
	result := []
	
	// add list to queue
	for item in list {
		queue.offer(item)
	}
	
	while !queue.isEmpty() {
		for i in 0..<skip - 1 {
			queue.offer(queue.poll())
		}
		result = (queue.poll(), result)
	}
	
	return ListUtil.reverse(result)
}

a := ['1','2','3','4','5','6','7','8','9']
print( circularCount(a, 3) )
