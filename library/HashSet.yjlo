/* HashSet
 * @author Liu Siwei (liusiwei.yjlo@gmail.com)
 * A hash set implemented using HashMap
 */

import HashMap;

func HashSet(capacity) {
	
	var _CAPACITY = 63;
	var _map = null;
	
	// Dummy value to associate with an Object in the backing Map
	func _Dummy() { return func(){}; }
	var _PRESENT = _Dummy();
	
	/* initialization */
	func _init() {
		if capacity {
			_CAPACITY = capacity;
		}
		_map = HashMap(_CAPACITY);
	}
	_init();

	func add(e) {
		return _map.put(e, _PRESENT) == null;
	}
	
	func clear() {
		_map.clear();
	}
	
	func size() {
		return _map.size();
	}
	
	func remove(o) {
		return _map.remove(o) == _PRESENT;
	}
	
	func toString() {
		var str = "";
		for i in (0, _CAPACITY) {
			var node = _getNodeByPath(_getPathByIndex(i), false);
			if node != null && !$is_empty(node.entry) {
				str += (i + ": " + node.toString() + "\n");
			}
		}
		return str;
	}

	return func(){};
}

/*
var set = HashSet();

print(set.add(3));

print(set.add(4));
print(set.add(3));
set.remove(3);
print(set.add(3));
print(set.size());

set.clear();

print(set.size());
print(set.add(4));
print(set.size());
*/