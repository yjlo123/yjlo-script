/* HeapList
 * @author Liu Siwei (liusiwei.yjlo@gmail.com)
 * A heap that works like an array list
 */

import Heap;

func HeapList() extends Heap {

	var _size = 0;

	func init(lst) {
		_root = _Node();
		_size = 0;
		var i = 0;
		while !$is_empty(lst) {
			put(i, $head(lst));
			i++;
			lst = $tail(lst);
		}
	}

	func put(index, value) {
		_getNodeByPath(_getPathByIndex(index), true, _root, _Node).value = value;
		if index + 1 > _size {
			_size = index + 1;
		}
	}

	func get(index) {
		index /= 1;
		if !(index >= 0) { return null; }
		var target = _getNodeByPath(_getPathByIndex(index), false, _root, _Node);
		if target {
			return target.value;
		} else {
			return null;
		}
	}

	func size() {
		return _size;
	}

	return func(){};
}

/*
var arr = HeapList();

arr.init($list("zero", "one", "two", "three", "four", "five", "six"));
arr.put(7, "seven");

print(arr.size());
print(arr.get(5));
*/