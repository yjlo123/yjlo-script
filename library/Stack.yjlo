class Stack {
	var _list = null
	var _size = 0
	
	@() {
		_list = []
	}
	
	/* Pushes an item onto the top of this stack. */
	func push(n) {
		_list = (n, _list)
		_size++
	}
	
	/* Removes the item at the top of this stack 
	 * and returns that item. */
	func pop() {
		if _list.isEmpty { throw("Exception: empty stack.") }
		value := _list.head
		_list = _list.tail
		_size--
		return value
	}
	
	/* Looks at the item at the top of this stack
	 * without removing it from the stack. */
	func peek() {
		if !empty() {
			return _list.head
		} else {
			throw("Exception: empty stack.")
		}
	}
	
	/* Returns the number of items in this stack. */
	func size() { return _size }
	
	/* Tests if this stack is empty. */
	func empty() { return size() == 0 }
	
	/* Removes all of the elements from this stack. */
	func clear() {
		_list = []
		_size = 0
	}
	
	/* Returns a string representation of the stack. */
	func toString() {
		func help(lst, str) {
			if lst.isEmpty { return str }
			return help(lst.tail, lst.head + " ) " + str)
		}
		return help(_list, "")
	}

}
